// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: bigb.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enums
type SexE int32

const (
	SexE_SexMale   SexE = 0
	SexE_SexFemale SexE = 1
)

// Enum value maps for SexE.
var (
	SexE_name = map[int32]string{
		0: "SexMale",
		1: "SexFemale",
	}
	SexE_value = map[string]int32{
		"SexMale":   0,
		"SexFemale": 1,
	}
)

func (x SexE) Enum() *SexE {
	p := new(SexE)
	*p = x
	return p
}

func (x SexE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SexE) Descriptor() protoreflect.EnumDescriptor {
	return file_bigb_proto_enumTypes[0].Descriptor()
}

func (SexE) Type() protoreflect.EnumType {
	return &file_bigb_proto_enumTypes[0]
}

func (x SexE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SexE.Descriptor instead.
func (SexE) EnumDescriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{0}
}

type OrientationE int32

const (
	OrientationE_OrientationStraight OrientationE = 0
	OrientationE_OrientationGay      OrientationE = 1
)

// Enum value maps for OrientationE.
var (
	OrientationE_name = map[int32]string{
		0: "OrientationStraight",
		1: "OrientationGay",
	}
	OrientationE_value = map[string]int32{
		"OrientationStraight": 0,
		"OrientationGay":      1,
	}
)

func (x OrientationE) Enum() *OrientationE {
	p := new(OrientationE)
	*p = x
	return p
}

func (x OrientationE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrientationE) Descriptor() protoreflect.EnumDescriptor {
	return file_bigb_proto_enumTypes[1].Descriptor()
}

func (OrientationE) Type() protoreflect.EnumType {
	return &file_bigb_proto_enumTypes[1]
}

func (x OrientationE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrientationE.Descriptor instead.
func (OrientationE) EnumDescriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{1}
}

type SmokingE int32

const (
	SmokingE_SmokingNegative SmokingE = 0
	SmokingE_SmokingPositive SmokingE = 1
	SmokingE_SmokingNone     SmokingE = 2
)

// Enum value maps for SmokingE.
var (
	SmokingE_name = map[int32]string{
		0: "SmokingNegative",
		1: "SmokingPositive",
		2: "SmokingNone",
	}
	SmokingE_value = map[string]int32{
		"SmokingNegative": 0,
		"SmokingPositive": 1,
		"SmokingNone":     2,
	}
)

func (x SmokingE) Enum() *SmokingE {
	p := new(SmokingE)
	*p = x
	return p
}

func (x SmokingE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmokingE) Descriptor() protoreflect.EnumDescriptor {
	return file_bigb_proto_enumTypes[2].Descriptor()
}

func (SmokingE) Type() protoreflect.EnumType {
	return &file_bigb_proto_enumTypes[2]
}

func (x SmokingE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmokingE.Descriptor instead.
func (SmokingE) EnumDescriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{2}
}

type AlcoholE int32

const (
	AlcoholE_AlcoholNegative AlcoholE = 0
	AlcoholE_AlcoholPositive AlcoholE = 1
	AlcoholE_AlcoholNone     AlcoholE = 2
)

// Enum value maps for AlcoholE.
var (
	AlcoholE_name = map[int32]string{
		0: "AlcoholNegative",
		1: "AlcoholPositive",
		2: "AlcoholNone",
	}
	AlcoholE_value = map[string]int32{
		"AlcoholNegative": 0,
		"AlcoholPositive": 1,
		"AlcoholNone":     2,
	}
)

func (x AlcoholE) Enum() *AlcoholE {
	p := new(AlcoholE)
	*p = x
	return p
}

func (x AlcoholE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlcoholE) Descriptor() protoreflect.EnumDescriptor {
	return file_bigb_proto_enumTypes[3].Descriptor()
}

func (AlcoholE) Type() protoreflect.EnumType {
	return &file_bigb_proto_enumTypes[3]
}

func (x AlcoholE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlcoholE.Descriptor instead.
func (AlcoholE) EnumDescriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{3}
}

type SportE int32

const (
	SportE_SportNegative SportE = 0
	SportE_SportPositive SportE = 1
	SportE_SportNone     SportE = 2
)

// Enum value maps for SportE.
var (
	SportE_name = map[int32]string{
		0: "SportNegative",
		1: "SportPositive",
		2: "SportNone",
	}
	SportE_value = map[string]int32{
		"SportNegative": 0,
		"SportPositive": 1,
		"SportNone":     2,
	}
)

func (x SportE) Enum() *SportE {
	p := new(SportE)
	*p = x
	return p
}

func (x SportE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SportE) Descriptor() protoreflect.EnumDescriptor {
	return file_bigb_proto_enumTypes[4].Descriptor()
}

func (SportE) Type() protoreflect.EnumType {
	return &file_bigb_proto_enumTypes[4]
}

func (x SportE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SportE.Descriptor instead.
func (SportE) EnumDescriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{4}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string       `protobuf:"bytes,1,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	Password    string       `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Tags        []string     `protobuf:"bytes,3,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Filestrings []string     `protobuf:"bytes,4,rep,name=Filestrings,proto3" json:"Filestrings,omitempty"`
	Name        string       `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Age         int32        `protobuf:"varint,6,opt,name=Age,proto3" json:"Age,omitempty"`
	IsAdmin     bool         `protobuf:"varint,7,opt,name=Is_admin,json=IsAdmin,proto3" json:"Is_admin,omitempty"`
	IsPremium   bool         `protobuf:"varint,8,opt,name=Is_premium,json=IsPremium,proto3" json:"Is_premium,omitempty"`
	Sex         SexE         `protobuf:"varint,9,opt,name=Sex,proto3,enum=bigb_api.v1.SexE" json:"Sex,omitempty"`
	Orientation OrientationE `protobuf:"varint,10,opt,name=Orientation,proto3,enum=bigb_api.v1.OrientationE" json:"Orientation,omitempty"`
	Smoking     SmokingE     `protobuf:"varint,11,opt,name=Smoking,proto3,enum=bigb_api.v1.SmokingE" json:"Smoking,omitempty"`
	Alcohol     AlcoholE     `protobuf:"varint,12,opt,name=Alcohol,proto3,enum=bigb_api.v1.AlcoholE" json:"Alcohol,omitempty"`
	Sport       SportE       `protobuf:"varint,13,opt,name=Sport,proto3,enum=bigb_api.v1.SportE" json:"Sport,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *User) GetFilestrings() []string {
	if x != nil {
		return x.Filestrings
	}
	return nil
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *User) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *User) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *User) GetSex() SexE {
	if x != nil {
		return x.Sex
	}
	return SexE_SexMale
}

func (x *User) GetOrientation() OrientationE {
	if x != nil {
		return x.Orientation
	}
	return OrientationE_OrientationStraight
}

func (x *User) GetSmoking() SmokingE {
	if x != nil {
		return x.Smoking
	}
	return SmokingE_SmokingNegative
}

func (x *User) GetAlcohol() AlcoholE {
	if x != nil {
		return x.Alcohol
	}
	return AlcoholE_AlcoholNegative
}

func (x *User) GetSport() SportE {
	if x != nil {
		return x.Sport
	}
	return SportE_SportNegative
}

type RegisterUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterUserRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *RegisterUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done bool `protobuf:"varint,1,opt,name=Done,proto3" json:"Done,omitempty"`
}

func (x *RegisterUserResponse) Reset() {
	*x = RegisterUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserResponse) ProtoMessage() {}

func (x *RegisterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserResponse.ProtoReflect.Descriptor instead.
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterUserResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteUserRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done bool `protobuf:"varint,1,opt,name=Done,proto3" json:"Done,omitempty"`
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteUserResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

type ReadUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *ReadUserRequest) Reset() {
	*x = ReadUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUserRequest) ProtoMessage() {}

func (x *ReadUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUserRequest.ProtoReflect.Descriptor instead.
func (*ReadUserRequest) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{5}
}

func (x *ReadUserRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ReadUserResponse) Reset() {
	*x = ReadUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUserResponse) ProtoMessage() {}

func (x *ReadUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUserResponse.ProtoReflect.Descriptor instead.
func (*ReadUserResponse) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{6}
}

func (x *ReadUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32        `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	PhoneNumber string       `protobuf:"bytes,2,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	Password    string       `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Name        string       `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Age         int32        `protobuf:"varint,5,opt,name=Age,proto3" json:"Age,omitempty"`
	MediaIndex  int32        `protobuf:"varint,6,opt,name=MediaIndex,proto3" json:"MediaIndex,omitempty"`
	NewMedia    string       `protobuf:"bytes,7,opt,name=NewMedia,proto3" json:"NewMedia,omitempty"`
	TagIndex    int32        `protobuf:"varint,8,opt,name=TagIndex,proto3" json:"TagIndex,omitempty"`
	NewTag      string       `protobuf:"bytes,9,opt,name=NewTag,proto3" json:"NewTag,omitempty"`
	Premium     bool         `protobuf:"varint,10,opt,name=Premium,proto3" json:"Premium,omitempty"`
	Admin       bool         `protobuf:"varint,11,opt,name=Admin,proto3" json:"Admin,omitempty"`
	Sex         SexE         `protobuf:"varint,12,opt,name=Sex,proto3,enum=bigb_api.v1.SexE" json:"Sex,omitempty"`
	Orientation OrientationE `protobuf:"varint,13,opt,name=Orientation,proto3,enum=bigb_api.v1.OrientationE" json:"Orientation,omitempty"`
	Smoking     SmokingE     `protobuf:"varint,14,opt,name=Smoking,proto3,enum=bigb_api.v1.SmokingE" json:"Smoking,omitempty"`
	Alcohol     AlcoholE     `protobuf:"varint,15,opt,name=Alcohol,proto3,enum=bigb_api.v1.AlcoholE" json:"Alcohol,omitempty"`
	Sport       SportE       `protobuf:"varint,16,opt,name=Sport,proto3,enum=bigb_api.v1.SportE" json:"Sport,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UpdateUserRequest) GetMediaIndex() int32 {
	if x != nil {
		return x.MediaIndex
	}
	return 0
}

func (x *UpdateUserRequest) GetNewMedia() string {
	if x != nil {
		return x.NewMedia
	}
	return ""
}

func (x *UpdateUserRequest) GetTagIndex() int32 {
	if x != nil {
		return x.TagIndex
	}
	return 0
}

func (x *UpdateUserRequest) GetNewTag() string {
	if x != nil {
		return x.NewTag
	}
	return ""
}

func (x *UpdateUserRequest) GetPremium() bool {
	if x != nil {
		return x.Premium
	}
	return false
}

func (x *UpdateUserRequest) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *UpdateUserRequest) GetSex() SexE {
	if x != nil {
		return x.Sex
	}
	return SexE_SexMale
}

func (x *UpdateUserRequest) GetOrientation() OrientationE {
	if x != nil {
		return x.Orientation
	}
	return OrientationE_OrientationStraight
}

func (x *UpdateUserRequest) GetSmoking() SmokingE {
	if x != nil {
		return x.Smoking
	}
	return SmokingE_SmokingNegative
}

func (x *UpdateUserRequest) GetAlcohol() AlcoholE {
	if x != nil {
		return x.Alcohol
	}
	return AlcoholE_AlcoholNegative
}

func (x *UpdateUserRequest) GetSport() SportE {
	if x != nil {
		return x.Sport
	}
	return SportE_SportNegative
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done bool `protobuf:"varint,1,opt,name=Done,proto3" json:"Done,omitempty"`
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

type AuthDataCorrectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *AuthDataCorrectRequest) Reset() {
	*x = AuthDataCorrectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthDataCorrectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthDataCorrectRequest) ProtoMessage() {}

func (x *AuthDataCorrectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthDataCorrectRequest.ProtoReflect.Descriptor instead.
func (*AuthDataCorrectRequest) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{9}
}

func (x *AuthDataCorrectRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AuthDataCorrectRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthDataCorrectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCorrect bool  `protobuf:"varint,1,opt,name=Is_correct,json=IsCorrect,proto3" json:"Is_correct,omitempty"`
	Id        int32 `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	IsAdmin   bool  `protobuf:"varint,3,opt,name=Is_admin,json=IsAdmin,proto3" json:"Is_admin,omitempty"`
	IsPremium bool  `protobuf:"varint,4,opt,name=Is_premium,json=IsPremium,proto3" json:"Is_premium,omitempty"`
}

func (x *AuthDataCorrectResponse) Reset() {
	*x = AuthDataCorrectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthDataCorrectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthDataCorrectResponse) ProtoMessage() {}

func (x *AuthDataCorrectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bigb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthDataCorrectResponse.ProtoReflect.Descriptor instead.
func (*AuthDataCorrectResponse) Descriptor() ([]byte, []int) {
	return file_bigb_proto_rawDescGZIP(), []int{10}
}

func (x *AuthDataCorrectResponse) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *AuthDataCorrectResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AuthDataCorrectResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *AuthDataCorrectResponse) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

var File_bigb_proto protoreflect.FileDescriptor

var file_bigb_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x69, 0x67, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x62, 0x69,
	0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0xce, 0x03, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x49, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x49, 0x73, 0x5f, 0x70, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x50,
	0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x78, 0x5f, 0x65, 0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x3c, 0x0a, 0x0b,
	0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x52, 0x0b, 0x4f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x6d,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x69,
	0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x65, 0x52, 0x07, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x07,
	0x41, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x63, 0x6f,
	0x68, 0x6f, 0x6c, 0x5f, 0x65, 0x52, 0x07, 0x41, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x12, 0x2a,
	0x0a, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x65, 0x52, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x53, 0x0a, 0x13, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x2a, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x44, 0x6f, 0x6e, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x22, 0x28, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x44, 0x6f, 0x6e, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x39, 0x0a,
	0x10, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x9b, 0x04, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x41,
	0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x65,
	0x77, 0x54, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x65, 0x77, 0x54,
	0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x24, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x78, 0x5f, 0x65, 0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x3c, 0x0a, 0x0b, 0x4f, 0x72, 0x69, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x69, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x52, 0x0b, 0x4f, 0x72, 0x69, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x52,
	0x07, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x07, 0x41, 0x6c, 0x63, 0x6f,
	0x68, 0x6f, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x67, 0x62,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x5f,
	0x65, 0x52, 0x07, 0x41, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x53, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x67, 0x62,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x52,
	0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x28, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x44, 0x6f, 0x6e, 0x65,
	0x22, 0x56, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x41, 0x75, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x49, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x49, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x49, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x2a, 0x23, 0x0a,
	0x05, 0x53, 0x65, 0x78, 0x5f, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x65, 0x78, 0x4d, 0x61, 0x6c,
	0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x78, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65,
	0x10, 0x01, 0x2a, 0x3c, 0x0a, 0x0d, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x69, 0x67, 0x68, 0x74, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x79, 0x10, 0x01,
	0x2a, 0x46, 0x0a, 0x09, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x6d, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x02, 0x2a, 0x46, 0x0a, 0x09, 0x41, 0x6c, 0x63, 0x6f,
	0x68, 0x6f, 0x6c, 0x5f, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c,
	0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6c,
	0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x41, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x02,
	0x2a, 0x3e, 0x0a, 0x07, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x70, 0x6f, 0x72, 0x74, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x02,
	0x32, 0xa7, 0x03, 0x0a, 0x0b, 0x42, 0x69, 0x67, 0x42, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x53, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x20, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1c, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f,
	0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x23, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x67, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x33, 0x63, 0x74,
	0x61, 0x68, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bigb_proto_rawDescOnce sync.Once
	file_bigb_proto_rawDescData = file_bigb_proto_rawDesc
)

func file_bigb_proto_rawDescGZIP() []byte {
	file_bigb_proto_rawDescOnce.Do(func() {
		file_bigb_proto_rawDescData = protoimpl.X.CompressGZIP(file_bigb_proto_rawDescData)
	})
	return file_bigb_proto_rawDescData
}

var file_bigb_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_bigb_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_bigb_proto_goTypes = []any{
	(SexE)(0),                       // 0: bigb_api.v1.Sex_e
	(OrientationE)(0),               // 1: bigb_api.v1.Orientation_e
	(SmokingE)(0),                   // 2: bigb_api.v1.Smoking_e
	(AlcoholE)(0),                   // 3: bigb_api.v1.Alcohol_e
	(SportE)(0),                     // 4: bigb_api.v1.Sport_e
	(*User)(nil),                    // 5: bigb_api.v1.User
	(*RegisterUserRequest)(nil),     // 6: bigb_api.v1.RegisterUserRequest
	(*RegisterUserResponse)(nil),    // 7: bigb_api.v1.RegisterUserResponse
	(*DeleteUserRequest)(nil),       // 8: bigb_api.v1.DeleteUserRequest
	(*DeleteUserResponse)(nil),      // 9: bigb_api.v1.DeleteUserResponse
	(*ReadUserRequest)(nil),         // 10: bigb_api.v1.ReadUserRequest
	(*ReadUserResponse)(nil),        // 11: bigb_api.v1.ReadUserResponse
	(*UpdateUserRequest)(nil),       // 12: bigb_api.v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),      // 13: bigb_api.v1.UpdateUserResponse
	(*AuthDataCorrectRequest)(nil),  // 14: bigb_api.v1.AuthDataCorrectRequest
	(*AuthDataCorrectResponse)(nil), // 15: bigb_api.v1.AuthDataCorrectResponse
}
var file_bigb_proto_depIdxs = []int32{
	0,  // 0: bigb_api.v1.User.Sex:type_name -> bigb_api.v1.Sex_e
	1,  // 1: bigb_api.v1.User.Orientation:type_name -> bigb_api.v1.Orientation_e
	2,  // 2: bigb_api.v1.User.Smoking:type_name -> bigb_api.v1.Smoking_e
	3,  // 3: bigb_api.v1.User.Alcohol:type_name -> bigb_api.v1.Alcohol_e
	4,  // 4: bigb_api.v1.User.Sport:type_name -> bigb_api.v1.Sport_e
	5,  // 5: bigb_api.v1.ReadUserResponse.user:type_name -> bigb_api.v1.User
	0,  // 6: bigb_api.v1.UpdateUserRequest.Sex:type_name -> bigb_api.v1.Sex_e
	1,  // 7: bigb_api.v1.UpdateUserRequest.Orientation:type_name -> bigb_api.v1.Orientation_e
	2,  // 8: bigb_api.v1.UpdateUserRequest.Smoking:type_name -> bigb_api.v1.Smoking_e
	3,  // 9: bigb_api.v1.UpdateUserRequest.Alcohol:type_name -> bigb_api.v1.Alcohol_e
	4,  // 10: bigb_api.v1.UpdateUserRequest.Sport:type_name -> bigb_api.v1.Sport_e
	6,  // 11: bigb_api.v1.BigBService.RegisterUser:input_type -> bigb_api.v1.RegisterUserRequest
	8,  // 12: bigb_api.v1.BigBService.DeleteUser:input_type -> bigb_api.v1.DeleteUserRequest
	12, // 13: bigb_api.v1.BigBService.UpdateUser:input_type -> bigb_api.v1.UpdateUserRequest
	10, // 14: bigb_api.v1.BigBService.ReadUser:input_type -> bigb_api.v1.ReadUserRequest
	14, // 15: bigb_api.v1.BigBService.AuthDataCorrect:input_type -> bigb_api.v1.AuthDataCorrectRequest
	7,  // 16: bigb_api.v1.BigBService.RegisterUser:output_type -> bigb_api.v1.RegisterUserResponse
	9,  // 17: bigb_api.v1.BigBService.DeleteUser:output_type -> bigb_api.v1.DeleteUserResponse
	13, // 18: bigb_api.v1.BigBService.UpdateUser:output_type -> bigb_api.v1.UpdateUserResponse
	11, // 19: bigb_api.v1.BigBService.ReadUser:output_type -> bigb_api.v1.ReadUserResponse
	15, // 20: bigb_api.v1.BigBService.AuthDataCorrect:output_type -> bigb_api.v1.AuthDataCorrectResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_bigb_proto_init() }
func file_bigb_proto_init() {
	if File_bigb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bigb_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ReadUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReadUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AuthDataCorrectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigb_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AuthDataCorrectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bigb_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bigb_proto_goTypes,
		DependencyIndexes: file_bigb_proto_depIdxs,
		EnumInfos:         file_bigb_proto_enumTypes,
		MessageInfos:      file_bigb_proto_msgTypes,
	}.Build()
	File_bigb_proto = out.File
	file_bigb_proto_rawDesc = nil
	file_bigb_proto_goTypes = nil
	file_bigb_proto_depIdxs = nil
}
